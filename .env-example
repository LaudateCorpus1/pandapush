###
## Database
##
## The database is only used for storing applications and keys.

## Use simple file store. (Only appropriate for development
## and single-server deployments.)

DATA_STORE=FILE

## Dynamo store.

#DATA_STORE=DYNAMO
#AWS_REGION=us-east-1
#DYNAMO_TABLE_APPLICATIONS=pandapush-applications
#DYNAMO_TABLE_KEYS=pandapush-keys


###
## Redis
## If omitted, events will use in-process routing. If configured,
## events will go through the specified Redis host(s). You can use
## multiple redis hosts, and they will be use in a sharded fashion.

#REDIS_HOSTS=127.0.0.1:6379,127.0.0.1:6380


###
## Session private key.
##
## If using multiple app servers, you'll want to create a long, random
## string to use for this, and set it the same on all app servers.
##

#SESSION_PRIVATE_KEY=<long, random string>


###
## Admin authentication.
##
## Access to the admin area can be restricted via either basic HTTP auth
## (with a single user) or CAS. If neither is configured, the admin UI
## is inaccessible.

## Basic auth:
ADMIN_USERNAME=<admin>
ADMIN_PASSWORD=<password>

## CAS auth:
#CAS_HOST=<cas host>
#CAS_PATH=<cas path>
#CAS_SERVICE=<url to your pandapush installation /admin>


###
## Root administrators
##
## Comma-separate list of usernames that have "root" access - can view
## all applications and keys.
#ROOT_ADMINS=admin,admin2


###
## Statsd
##
## Pandapush can push statistics about connected clients and channels
## to statsd.

STATSD_HOST=localhost
STATSD_PORT=8192
STATSD_PREFIX=


###
## Worker processes
##
## Setting NODE_WORKERS will trigger the server to use the node cluster
## module to use multiple worker processes. Set it to the number of
## worker processes to use, or '-1' to use 1 per CPU. 0 means that the
## main process will act as the sole worker.

NODE_WORKERS=0
