###
## Database
##
## The database is only used for storing applications and keys.

#DATABASE=postgres
#DATABASE_ADDRESS=<hostname>
#DATABASE_PORT=<port>
#DATABASE_USERNAME=<username>
#DATABASE_PASSWORD=<password>
#DATABASE_NAME=<db name>

###
## Redis
## If omitted, events will use in-process routing. If configured,
## events will go through the specified Redis host(s). You can use
## multiple redis hosts, and they will be use in a sharded fashion.

#REDIS_HOSTS=127.0.0.1:6379,127.0.0.1:6380


###
## Session private key.
##
## If using multiple app servers, you'll want to create a long, random
## string to use for this, and set it the same on all app servers.
##

#SESSION_PRIVATE_KEY=<long, random string>


###
## Admin authentication.
##
## Access to the admin area can be restricted via either basic HTTP auth
## (with a single user) or Okta. If neither is configured, the admin UI
## is inaccessible.

## Method of auth to use: `basic`, `okta`, `none`
AUTH_METHOD=none

## Basic auth:
#ADMIN_USERNAME=admin
#ADMIN_PASSWORD=password

## Okta auth:
#OKTA_ISSUER: https://<okta domain>/oauth2/default
#OKTA_CLIENT_ID: <client id>
#OKTA_CLIENT_SECRET: <client secret>
#OKTA_REDIRECT_URI: https://<pandapush domain>/authorization-code/callback
# If set, will strip the supplied value off of the incoming username.
# Useful if your username format is something like `user@corp.example.com`,
# and you want the username in the admin area to be `user`.
#OKTA_STRIP_DOMAIN: @corp.example.com


###
## Root administrators
##
## Comma-separate list of usernames that have "root" access - can view
## all applications and keys.
#ROOT_ADMINS=admin,admin2


###
## Statsd
##
## Pandapush can push statistics about connected clients and channels
## to statsd.

STATSD_HOST=localhost
STATSD_PORT=8192
STATSD_PREFIX=
